[*******************************************************************************
 * Copyright (c) 2013 EMF-REST.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Camilo Alvarez (cadorca@gmail.com)  - initial API and implementation
 ******************************************************************************]
[% import "../lib/StringUtils.eol"; %]
[% import "../lib/EcoreUtils.eol"; %]

[%for (clazz in EClass.all) { %]
	
function [%=clazz.name()%](baseUrl,pId){
    this.url = stipTrailingSlash(baseUrl)+"[%if(clazz.isStandAlone()){%][%="/"+clazz.name()%][%}%]"+(pId ? "/"+pId : "");
	this.id = pId;
[%for (attr in clazz.eAllReferences) { %]
 	this.[%=attr.name%] = function(aId){
    	return new [%=attr.eType.name()%](this.url+"/[%=attr.name%]",aId);
 	};
[%}%]
}

[%}%]

function stipTrailingSlash(str){
   if(str.charAt(str.length-1) == "/"){ str = str.substr(0, str.length - 1);}
   return str;
}

function restApi() {
	this.callGet = function(url, doneCallBack, depth, failCallBack) {
	  callAjax("GET", url, {depth : (depth ? depth : 0 )}, doneCallBack, failCallBack);
	};

	this.callPut = function(url, data,  doneCallBack, depth, failCallBack) {
	  callAjax("GET", url, {depth : (depth ? depth : 0 )}, doneCallBack, failCallBack);
	};

	this.callPost = function(url, data, doneCallBack, depth, failCallBack) {
	  callAjax("GET", url, {depth : (depth ? depth : 0 )}, doneCallBack, failCallBack);
	};

	this.callDelete = function(url, doneCallBack, depth, failCallBack) {
	  callAjax("GET", url, {depth : (depth ? depth : 0 )}, doneCallBack, failCallBack);
	};
	
	function callAjax(method, url, params, doneCallBack, errorCallBack){
	$.ajax({
		type: method,
		data: params,
		url : url,
		beforeSend : function(xhr) {
			xhr.overrideMimeType("application/json; charset=x-user-defined");
		} 
	}).done(function(data) {
		   doneCallBack(data);
	}).fail(function(){
	
	});	
}

}

var RestApi = new restApi();